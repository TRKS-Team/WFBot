name: Master Publish

on:
  push:
    branches: [universal]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Reset Tags
        run: git fetch --tags

      - name: Clean 1
        run: dotnet clean WFBot.sln --configuration "Windows Release" && dotnet nuget locals all --clear
      - name: Clean 2
        run: dotnet clean WFBot.sln --configuration "Linux Release" && dotnet nuget locals all --clear
      - name: Restore dependencies
        run: dotnet restore

      - name: Windows Build
        run: dotnet publish WFBot -c "Windows Release" -o WindowsPublish --self-contained false
        env:
          OFFICIAL_BUILD: official
      - name: Linux Build
        run: dotnet publish WFBot -c "Linux Release" -o LinuxPublish --self-contained false
        env:
          OFFICIAL_BUILD: official
      - name: Mirai Connector Build
        run: dotnet publish Connectors/MiraiHTTPConnector -c "Linux Release" -o MiraiConnector --self-contained false
        env:
          OFFICIAL_BUILD: official
      - name: Test Connector Build
        run: dotnet publish Connectors/TestConnector -c "Linux Release" -o TestConnector --self-contained false
        env:
          OFFICIAL_BUILD: official

#      - name: Pre Run Windows
#        run: dotnet WindowsPublish/WFBot.dll --skip-press-any-key --set-current-folder-to-executable --no-logs
#      - name: Pre Run Linux
#        run: dotnet LinuxPublish/WFBot.dll --skip-press-any-key --set-current-folder-to-executable --no-logs

      - name: Zip Windows Release
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: ./WindowsPublish/*
          pathTarget: WFBot-Windows.7z
      - name: Zip Linux Release
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: ./LinuxPublish/*
          pathTarget: WFBot-Linux.7z
      - name: Zip Mirai Connector
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathTarget: WFBot-Connector-MiraiConnector.7z
          pathSource: ./MiraiConnector/*
      - name: Zip Test Connector
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathTarget: WFBot-Connector-TestConnector.7z
          pathSource: ./TestConnector/*

      - name: Upload Windows
        uses: actions/upload-artifact@v2
        with:
          name: WFBot Windows
          path: ./WFBot-Windows.7z
          retention-days: 30
      - name: Upload Linux
        uses: actions/upload-artifact@v2
        with:
          name: WFBot Linux
          path: ./WFBot-Linux.7z
          retention-days: 30
      - name: Upload Mirai Connector
        uses: actions/upload-artifact@v2
        with:
          name: WFBot Mirai Connector
          path: ./WFBot-Connector-MiraiConnector.7z
          retention-days: 30
      - name: Upload Test Connector
        uses: actions/upload-artifact@v2
        with:
          name: WFBot Test Connector
          path: ./WFBot-Connector-TestConnector.7z
          retention-days: 30

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Create a GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.gitversion.outputs.informationalVersion }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Upload WFBot Windows Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WFBot-Windows.7z
          asset_name: WFBot-Windows.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload WFBot Linux Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WFBot-Linux.7z
          asset_name: WFBot-Linux.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload WFBot Mirai Connector
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WFBot-Connector-MiraiConnector.7z
          asset_name: WFBot-Connector-MiraiConnector.7z
          asset_content_type: application/x-7z-compressed
      - name: Upload WFBot Test Connector
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WFBot-Connector-TestConnector.7z
          asset_name: WFBot-Connector-TestConnector.7z
          asset_content_type: application/x-7z-compressed
